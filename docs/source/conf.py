# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Project information -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information
import os
import sys

sys.path.insert(0, os.path.abspath("../.."))

project = "Service-Kit"
copyright = "2025, Mike Salvatore"
author = "Mike Salvatore"

# The short X.Y version
version = "0.0"
# The full version, including alpha/beta/rc tags
release = "0.0.0"

extensions = [
    "sphinx.ext.autodoc",  # support for automatic documentation of docstrings
    "sphinx.ext.intersphinx",  # references to external documentation
    "sphinx_rtd_theme",
    "myst_parser",
    "autoapi.extension",
    "sphinx.ext.napoleon",  # support for Google-style and NumPy-style docstrings
    "sphinx.ext.viewcode",
    "sphinxcontrib.autodoc_pydantic",
]

autoapi_dirs = ["../../service_kit"]
autoapi_python_class_content = "both"  # Adjust this if needed
autoapi_add_toctree_entry = True
autoapi_template = "python"
autoapi_options = [
    "members",
    "undoc-members",
    "private-members",
    "show-inheritance",
    "show-module-summary",
    "special-members",
    "imported-members",
    "no-index",  # Prevents indexing duplicate objects
]

# Mappings for sphinx.ext.intersphinx. Projects have to have Sphinx-generated doc! (.inv file)
intersphinx_mapping = {
    "python": ("https://docs.python.org/3/", None),
}

autoclass_content = "both"  # Add __init__ doc (ie. params) to class summaries
set_type_checking_flag = True  # Enable 'expensive' imports for sphinx_autodoc_typehints
sphinx_autodoc_typehints = "both"  # Sphinx-native. Not as good as sphinx_autodoc_typehints
add_module_names = True  # Remove namespaces from class/method signatures


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["*node_modules*"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "friendly"


# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output

html_theme = "sphinx_rtd_theme"
html_static_path = ["_static"]
html_favicon = "_static/favicon.ico"
html_show_sphinx = False  # Shows "Build with Sphinx and RTD schem text at footer"
html_show_copyright = True  # Shows copyright using the company and author specified above
html_show_sourcelink = False  # Remove 'view source code' from top of page (for html, not python)
html_theme_options = {
    "style_external_links": True,
    "vcs_pageview_mode": "",
    "version_selector": True,
    "language_selector": True,
    # Toc options
    "collapse_navigation": False,
    "sticky_navigation": True,
    "navigation_depth": -1,
    "includehidden": True,
    "titles_only": False,
}

# -- Options for autoapi -----------------------------------------------------
# Note: python_import_resolution should be removed when looked into
# why autoapi gets circular imports
suppress_warnings = ["autoapi.python_import_resolution", "autoapi.not_readable", "myst.header"]
