[project]
authors = [{name = "Mike Salvatore", email="mike.salvatore@akamai.com"}]
classifiers=[
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3.11"
]
dependencies = [
    "loguru (>=0.7.3, <1.0)",
    "monkey-types (>=1.0.0, <2.0.0)",
    "fastapi (>=0.115.6, <1.0.0)",
    "pydantic-settings (>=2.7.1, <3.0)",
    "python-ulid (>=3.0.0, <4.0.0)",
    "uvicorn (>=0.34.0, <1.0.0)",
]
description = "A collection of functions and objects that help the Monkey team bootstrap, build, and maintain services"
dynamic = ["readme"]
license = "GPLv3"
name = "service-kit"
requires-python = "^3.11"
version = "v1.1.0"

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}

[project.urls]
Repository = "https://github.com/guardicode/service-kit"


[tool.black]
line-length = 100
exclude = "template_service.py"

[tool.cruft]
skip = [
    "service-kit/__init__.py",
    "README.md",
    "CHANGELOG.md",
    "vulture_allowlist.py"
]

[tool.isort]
known_first_party = "service-kit"
line_length = 100
skip_glob="**/__init__.py"
### for compatibility with black
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
check_untyped_defs = true
exclude = "vulture_allowlist.py | template_service.py"

[tool.pytest.ini_options]
minversion = "6.0"
log_cli = 1
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)s] %(module)s.%(funcName)s.%(lineno)d: %(message)s"
log_cli_date_format = "%H:%M:%S"
addopts = "-v --capture=no tests"

[tool.vulture]
exclude=[]
paths = ["service_kit", "vulture_allowlist.py"]

[tool.poetry]
include = ["CHANGELOG.md", "README.md"]

[tool.poetry.group.dev.dependencies]
black = "24.3.0"
dlint = "0.14.1"
flake8 = "7.1.1"
isort = "5.12.0"
mypy = "1.11.1"
pudb = "^2022.1.2"
pynvim = "^0.4.3"
pytest = "^7.1.0"
pytest-cov = "^3.0.0"
pytest-xdist = "^3.3.1"
vulture = "2.9.1"
httpx = "^0.28.1"
jinja2 = "^3.1.5"
requests = "^2.32.3"

[project.optional-dependencies]
psycopg = ["psycopg"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
